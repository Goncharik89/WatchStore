 - npm init -y
  - npm i express
  - npm i morgan nodemon -D
  - npx eslint --init
  - npx create-gitignore node


                  ////// Скрипты
    "start": "node src/app.js",
    "dev": "nodemon src/app.js --ext js,jsx"

                 //////app.js
                 
require('dotenv').config();

const path = require('path');
const express = require('express');
const morgan = require('morgan');

// const { sequelize, Task } = require('../db/models');
// const renderTemplate = require('../lib/renderTemplate');

// const Home = require('../views/Home');
// const Form = require('../views/Form');
// const Tasks = require('../views/Tasks');
// const Dog = require('../views/Dog');

const app = express();

app.use(morgan('dev'));
app.use(express.static(path.join(__dirname, '../public')));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

const PORT = process.env.PORT || 3000;

app.listen(PORT, async () => {
  try {
    await sequelize.authenticate(app);
    console.log('Соединение с базой установлено!');
  } catch (error) {
    console.log('Faaaack!!!', error);
  }
  console.log(`Сервер запущен на порту ${PORT}!`);
});

                 //////.env
 - touch .env
 
 PORT=3000
 DATABASE_URL=postgres://sergei2:sergei2@localhost:5432/database

 - npm i dotenv

                 ////// sequelize
- npm i sequelize sequelize-cli pg pg-hstore
- touch .sequelizerc

  require('dotenv').config();
      const path = require('path');
      module.exports = {
        'config': path.resolve('db', 'config', 'database.json'),
        'models-path': path.resolve('db', 'models'),
        'seeders-path': path.resolve('db', 'seeders'),
        'migrations-path': path.resolve('db', 'migrations'),
      };

- npx sequelize init

               ///////#database.json

      "development": {
        "use_env_variable": "DATABASE_URL"
      },


               ////// Создание базы данных

 - npx sequelize db:create
 - npx sequelize model:generate --name Task --attributes title:string,body:string
 - npx sequelize db:migrate


               /////// Установим React(ssr) Babel
  - npm i @babel/core @babel/preset-env @babel/preset-react @babel/register react react-dom
  - touch .babelrc
    {
      "presets": [
        "@babel/preset-env",
        "@babel/preset-react"
      ]
    }

  
              /////// Вьюшки

 - mkdir views
 - touch views/User.jsx views/Form.jsx views/Layout.jsx views/Home.jsx
  

             ////// 
 - mkdir lib  
 - touch lib/renderTemplate.js          
 
require('@babel/register');

const React = require('react');
const ReactDomServer = require('react-dom/server');

const renderTemplate = (reactElement, properties, response) => {
  const reactEl = React.createElement(reactElement, properties);
  const html = ReactDomServer.renderToStaticMarkup(reactEl);
  response.write('<!DOCTYPE html>');
  response.write(html);
  response.end();
};

module.exports = renderTemplate;


                                     ///////

- mkdir public
- mkdir public/js public/styles
- touch public/styles/main.css

                                   ////// Bootstrap

- npm i bootstrap@5.2.0

        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx"
          crossOrigin="anonymous"
        />
        <script
          defer
          src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"
          integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa"
          crossOrigin="anonymous"
        />


                                  ///////Layout

const React = require('react');

module.exports = function Layout({ children }) {
  return (
    <html lang="en">
      <head>
        <meta charSet="UTF-8" />
        <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx"
          crossOrigin="anonymous"
        />
        <script
          defer
          src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"
          integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa"
          crossOrigin="anonymous"
        />
        <link rel="stylesheet" href="styles/main.css" />
        <script defer src="js/application.js" />
      </head>
      <body>
        { children }
      </body>
    </html>
  );
};
